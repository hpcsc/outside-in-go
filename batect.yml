project_name: outside-in-go

containers:
  golang:
    image: golang:1.18.0
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user
    volumes:
      - local: .
        container: /app
        options: cached
      - type: cache
        name: go-cache
        container: /home/container-user/go
      - type: cache
        name: secrets
        container: /secrets
    environment:
      GOCACHE: /home/container-user/go
    working_directory: /app

  mock-aws:
    build_directory: .batect/mock-aws
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user
    setup_commands:
      - command: /scripts/setup.sh
    volumes:
      - type: cache
        name: secrets
        container: /secrets
    environment:
      AWS_REGION: us-west-2
      AWS_ACCESS_KEY_ID: x
      AWS_SECRET_ACCESS_KEY: y
      AWS_SHARED_CREDENTIALS_FILE: /secrets/test-user-credentials

  app:
    build_directory: .
    dependencies:
      - mock-aws
    volumes:
      - type: cache
        name: secrets
        container: /secrets
    environment:
      S3_ENDPOINT: http://mock-aws:5000
      PORT: 3333
      BUCKET: outside-in-go
      AWS_SHARED_CREDENTIALS_FILE: /secrets/test-user-credentials

tasks:
  unit-test:
    description: Run unit test
    run:
      container: golang
      command: go test -v -tags="unit" ./...

  integration-test:
    description: Run integration test
    dependencies:
      - mock-aws
    run:
      container: golang
      command: go test -v -tags="integration" ./...
      environment:
        S3_ENDPOINT: http://mock-aws:5000
        AWS_SHARED_CREDENTIALS_FILE: /secrets/test-user-credentials

  e2e-test:
    description: Run e2e test
    dependencies:
      - app
    run:
      container: golang
      command: go test -v -tags="e2e" ./...
      environment:
        S3_ENDPOINT: http://mock-aws:5000
        API_URL: http://app:3333
        BUCKET: outside-in-go
        AWS_SHARED_CREDENTIALS_FILE: /secrets/test-user-credentials
